// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using WebAPIQuanLyCuDan.Entity;

#nullable disable

namespace WebAPIQuanLyCuDan.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20240327025228_InitialDatabase")]
    partial class InitialDatabase
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("WebAPIQuanLyCuDan.Models.Apartment", b =>
                {
                    b.Property<int>("ApartmentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("ApartmentId"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("ApartmentId");

                    b.ToTable("apartment");
                });

            modelBuilder.Entity("WebAPIQuanLyCuDan.Models.Tenant", b =>
                {
                    b.Property<int>("TenantId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("TenantId"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("TenantId");

                    b.ToTable("tenant");
                });

            modelBuilder.Entity("WebAPIQuanLyCuDan.Models.TenantApartment", b =>
                {
                    b.Property<int>("TenantId")
                        .HasColumnType("integer");

                    b.Property<int>("ApartmentId")
                        .HasColumnType("integer");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("TenantId", "ApartmentId");

                    b.HasIndex("ApartmentId");

                    b.ToTable("tenantApartment");
                });

            modelBuilder.Entity("WebAPIQuanLyCuDan.Models.TenantApartment", b =>
                {
                    b.HasOne("WebAPIQuanLyCuDan.Models.Apartment", "Apartment")
                        .WithMany("TenantApartments")
                        .HasForeignKey("ApartmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebAPIQuanLyCuDan.Models.Tenant", "Tenant")
                        .WithMany("TenantApartments")
                        .HasForeignKey("TenantId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Apartment");

                    b.Navigation("Tenant");
                });

            modelBuilder.Entity("WebAPIQuanLyCuDan.Models.Apartment", b =>
                {
                    b.Navigation("TenantApartments");
                });

            modelBuilder.Entity("WebAPIQuanLyCuDan.Models.Tenant", b =>
                {
                    b.Navigation("TenantApartments");
                });
#pragma warning restore 612, 618
        }
    }
}
